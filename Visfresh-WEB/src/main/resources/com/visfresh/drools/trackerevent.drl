package com.visfresh.drools
 
import com.visfresh.rules.AssignShipmentRule;
import com.visfresh.rules.RuleContext;
import com.visfresh.rules.EnterBrightEnvironmentAlertRule;
import com.visfresh.rules.EnterDarkEnvironmentAlertRule;
import com.visfresh.rules.BatteryLowAlertRule;
import com.visfresh.rules.ArrivalRule;
import com.visfresh.rules.AutoStartShipmentRule;
import com.visfresh.rules.MovementStartAlertRule;
import com.visfresh.rules.MovementStopAlertRule;
import com.visfresh.rules.AbstractRuleEngine;
import com.visfresh.rules.TemperatureAlertRule;
import com.visfresh.rules.StartShipmentTimeCorrectRule;

global AbstractRuleEngine engine;

rule "StartShipmentTimeCorrect"
	salience 150
    when
        context : RuleContext(engine.getRule(StartShipmentTimeCorrectRule.NAME).accept(this));
    then
    	if(engine.getRule(StartShipmentTimeCorrectRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "AssignShipment"
	salience 100
    when
        context : RuleContext(engine.getRule(AssignShipmentRule.NAME).accept(this));
    then
    	if(engine.getRule(AssignShipmentRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "AutoStartShipment"
	salience 50
    when
        context : RuleContext(engine.getRule(AutoStartShipmentRule.NAME).accept(this));
    then
    	if(engine.getRule(AutoStartShipmentRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "TemperatureAlert"
    when
        context : RuleContext(engine.getRule(TemperatureAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(TemperatureAlertRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "EnterBrightEnvironmentAlert"
    when
        context : RuleContext(engine.getRule(EnterBrightEnvironmentAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(EnterBrightEnvironmentAlertRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "EnterDarkEnvironmentAlert"
    when
        context : RuleContext(engine.getRule(EnterDarkEnvironmentAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(EnterDarkEnvironmentAlertRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "BatteryLowAlert"
    when
        context : RuleContext(engine.getRule(BatteryLowAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(BatteryLowAlertRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "Arrival"
    when
        context : RuleContext(engine.getRule(ArrivalRule.NAME).accept(this));
    then
    	if(engine.getRule(ArrivalRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "MovementStartAlert"
    when
        context : RuleContext(engine.getRule(MovementStartAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(MovementStartAlertRule.NAME).handle(context)) {
       		update(context);
        }
end

rule "MovementStopAlert"
    when
        context : RuleContext(engine.getRule(MovementStopAlertRule.NAME).accept(this));
    then
    	if(engine.getRule(MovementStopAlertRule.NAME).handle(context)) {
       		update(context);
        }
end
